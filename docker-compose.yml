version: '3'
services:

  ## MySQL Docker Compose Config
  postgres-order :
    container_name: postgresSQLOrder
    image: postgres
    environment:
      POSTGRES_DB : order-service
      POSTGRES_USER : ds3128
      POSTGRES_PASSWORD : Angelle1997@
      PG_DATA : /data/postgres #a modifier
    volumes:
      - ./postgres-order:/data/postgres #a modifier
    expose:
      - "5431"
    ports:
      - "5431:5431"
    command:
      - p 5431
    restart: unless-stopped

  mysql-inventory :
    container_name: postgresSQLInventory
    image: postgres
    environment:
      POSTGRES_DB: inventory-service
      POSTGRES_USER: ds3128
      POSTGRES_PASSWORD: Angelle1997@
      PG_DATA: /data/postgres #a modifier
    volumes:
      - ./postgres-order:/data/postgres #a modifier
    expose:
      - "5432"
    ports:
      - "5432:5432"
    command:
      - p 5432
    restart: unless-stopped

  ## Mongo Docker Compose Config
  mongo :

  ## Keycloak Config with MySQL database
  keycloak-mysql :

  keycloak :

  ## Zookeeper Docker Compose Config
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"


  ## Kafka Docker Compose Config
  broker:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  ## Zipkin
  zipkin :

  ## Eureka Server Docker Compose Config
  discovery-service :
